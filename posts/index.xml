<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Just Random Notes</title>
        <link>https://00derek.github.io/posts/</link>
        <description>Recent content in Posts on Just Random Notes</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Wed, 24 Mar 2021 22:48:42 -0700</lastBuildDate>
        <atom:link href="https://00derek.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>K3s on RPi notes</title>
            <link>https://00derek.github.io/posts/k3s/</link>
            <pubDate>Wed, 24 Mar 2021 22:48:42 -0700</pubDate>
            
            <guid>https://00derek.github.io/posts/k3s/</guid>
            <description>Flash the OS to the SD card  Download Raspbian Lite Flash to SD card using Etcher from Balena Enabling SSH for your Headless Raspberry Pi, touch /boot/ssh  Customization  sudo raspi-config  Set the GPU memory split to 16mb Set the hostname, kubemaster, kube 1 -4 for me Change the password for the pi user   Disable swap  sudo dphys-swapfile swapoff &amp;amp;&amp;amp; \ sudo dphys-swapfile uninstall &amp;amp;&amp;amp; \ sudo systemctl stop dphys-swapfile &amp;amp;&amp;amp; \ sudo systemctl disable dphys-swapfile   Enable container features</description>
            <content type="html"><![CDATA[<h2 id="flash-the-os-to-the-sd-card">Flash the OS to the SD card</h2>
<ul>
<li>Download <a href="https://www.raspberrypi.org/downloads/raspbian/">Raspbian Lite</a></li>
<li>Flash to SD card using <a href="https://www.balena.io/etcher/">Etcher from Balena</a></li>
<li>Enabling SSH for your Headless Raspberry Pi, <code>touch /boot/ssh</code></li>
</ul>
<h2 id="customization">Customization</h2>
<ul>
<li><code>sudo raspi-config</code>
<ul>
<li>Set the GPU memory split to 16mb</li>
<li>Set the hostname, kubemaster, kube 1 -4 for me</li>
<li>Change the password for the pi user</li>
</ul>
</li>
<li>Disable swap</li>
</ul>
<pre><code>sudo dphys-swapfile swapoff &amp;&amp; \
sudo dphys-swapfile uninstall &amp;&amp; \
sudo systemctl stop dphys-swapfile &amp;&amp; \
sudo systemctl disable dphys-swapfile
</code></pre><ul>
<li>
<p>Enable container features</p>
<ul>
<li>adding <code>cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory</code> to the end of the line of <code>/boot/cmdline.txt</code></li>
<li>reboot</li>
</ul>
</li>
<li>
<p>Set Up Keyless SSH Access Between Hosts</p>
</li>
</ul>
<h2 id="configure-the-network">Configure the Network</h2>
<ul>
<li><a href="https://downey.io/blog/create-raspberry-pi-3-router-dhcp-server/">Reference here</a></li>
<li>set static ip on the home router for the master node</li>
<li>Wireless and eth0 Static IP on Raspberry PI by editing <code>sudo vi /etc/dhcpcd.conf</code></li>
</ul>
<pre><code>interface wlan0
static ip_address=192.168.1.101/24
static routers=192.168.1.1
static domain_name_servers=8.8.8.8

....
interface eth0
static ip_address=10.0.0.1/24
static domain_name_servers=8.8.8.8
</code></pre><ul>
<li>a DHCP server for the cluster
<ul>
<li>Install dnsmasq</li>
</ul>
<pre><code># Install dnsmasq
sudo apt install dnsmasq

# Move it's default config file for safe-keeping
sudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.old
</code></pre><ul>
<li>modify <code>/etc/dnsmasq.conf</code></li>
</ul>
<pre><code># Our DHCP service will be providing addresses over our eth0 adapter
interface=eth0

# We will listen on the static IP address we declared earlier
listen-address=10.0.0.1

# My cluster doesn't have that many Pis, but since we'll be using this as
# a jumpbox it is nice to give some wiggle-room.
# We also declare here that the IP addresses we lease out will be valid for
# 12 hours
dhcp-range=10.0.0.32,10.0.0.128,12h

# Decided to assign static IPs to the kube cluster members
# This would make it easier for tunneling, certs, etc.
dhcp-host=db:c6:12:f2:7b:16,10.0.0.11
dhcp-host=db:c6:12:f3:7a:e3,10.0.0.12
dhcp-host=db:c6:12:f4:7a:c7,10.0.0.13
dhcp-host=db:c6:12:f5:7a:f2,10.0.0.14
# This is where you declare any name-servers. We'll just use Google's
server=8.8.8.8
# server=8.8.4.4

# Bind dnsmasq to the interfaces it is listening on (eth0)
bind-interfaces

# Never forward plain names (without a dot or domain part)
domain-needed

# Never forward addresses in the non-routed address spaces.
bogus-priv

# Use the hosts file on this machine
expand-hosts

# Useful for debugging issues
# log-queries
# log-dhcp
</code></pre></li>
<li>Give clustered Pis static IP addresses, <code>10.0.0.1</code> for the master node, <code>10.0.0.11 - 14</code> for the worker nodes</li>
</ul>
<h2 id="create-the-k3s-cluster">Create the k3s cluster</h2>
<ul>
<li>On master <code> curl -sfL https://get.k3s.io | sh -</code>
<ul>
<li>check the status <code>sudo systemctl status k3s</code></li>
</ul>
</li>
<li>grep the key from the master <code>sudo cat /var/lib/rancher/k3s/server/node-token</code></li>
<li>Join worker nodes, on each node <code>kube1- kube4</code>
<ul>
<li><code>export K3S_URL=&quot;https://10.0.0.1:6443&quot;</code></li>
<li><code>export K3S_TOKEN=&quot;&quot;</code></li>
<li>install <code>curl -sfL https://get.k3s.io | sh -</code> (because of the env. variable, the script installs the agent)</li>
</ul>
</li>
<li>List nodes &ndash; <code>kubectl get node -o wide</code></li>
</ul>
<pre><code>NAME         STATUS   ROLES                  AGE   VERSION        INTERNAL-IP     EXTERNAL-IP   OS-IMAGE                         KERNEL-VERSION   CONTAINER-RUNTIME
kube3        Ready    &lt;none&gt;                 39m   v1.20.4+k3s1   10.0.0.13       &lt;none&gt;        Raspbian GNU/Linux 10 (buster)   5.4.83-v7l+      containerd://1.4.3-k3s3
kube4        Ready    &lt;none&gt;                 39m   v1.20.4+k3s1   10.0.0.14       &lt;none&gt;        Raspbian GNU/Linux 10 (buster)   5.4.83-v7l+      containerd://1.4.3-k3s3
kube1        Ready    &lt;none&gt;                 50m   v1.20.4+k3s1   10.0.0.11       &lt;none&gt;        Raspbian GNU/Linux 10 (buster)   5.4.83-v7l+      containerd://1.4.3-k3s3
kube2        Ready    &lt;none&gt;                 41m   v1.20.4+k3s1   10.0.0.12       &lt;none&gt;        Raspbian GNU/Linux 10 (buster)   5.4.83-v7l+      containerd://1.4.3-k3s3
kubemaster   Ready    control-plane,master   52m   v1.20.4+k3s1   192.168.1.101   &lt;none&gt;        Raspbian GNU/Linux 10 (buster)   5.4.83-v7l+      containerd://1.4.3-k3s3
pi@kube
</code></pre><h2 id="some-random-notes">Some random notes</h2>
<ul>
<li><a href="https://github.com/k3s-io/k3s/issues/389">Unable to read /etc/rancher/k3s/k3s.yaml</a></li>
<li>access it through local kubectl
<ul>
<li>copy content of <code>/etc/rancher/k3s/k3s.yaml</code> to local <code>~/.kube/config</code></li>
<li>replace the ip (127.0.0.1 to the actual IP of the cluster)</li>
</ul>
</li>
</ul>
<h2 id="to-be-continued">To be continued</h2>
<ul>
<li>try k3sup?</li>
<li>try arkade</li>
<li>Deploy a microservice, OpenFaaS, kafka, ?</li>
<li>hosted jupyter notebook?</li>
</ul>
<h2 id="references">References</h2>
<ul>
<li><a href="https://downey.io/blog/create-raspberry-pi-3-router-dhcp-server/">https://downey.io/blog/create-raspberry-pi-3-router-dhcp-server/</a></li>
<li><a href="https://blog.alexellis.io/test-drive-k3s-on-raspberry-pi/">https://blog.alexellis.io/test-drive-k3s-on-raspberry-pi/</a></li>
<li><a href="https://github.com/alexellis/k3sup">https://github.com/alexellis/k3sup</a></li>
<li><a href="https://github.com/alexellis/arkade">https://github.com/alexellis/arkade</a></li>
<li><a href="https://help.dreamhost.com/hc/en-us/articles/216499537-How-to-configure-passwordless-login-in-Mac-OS-X-and-Linux">https://help.dreamhost.com/hc/en-us/articles/216499537-How-to-configure-passwordless-login-in-Mac-OS-X-and-Linux</a></li>
<li><a href="https://rancher.com/docs/k3s/latest/en/installation/install-options/server-config/">https://rancher.com/docs/k3s/latest/en/installation/install-options/server-config/</a></li>
<li><a href="https://oliver-hu.medium.com/set-up-a-kafka-cluster-with-raspberry-pi-2859005a9bed">https://oliver-hu.medium.com/set-up-a-kafka-cluster-with-raspberry-pi-2859005a9bed</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Starting Pi</title>
            <link>https://00derek.github.io/posts/pi/</link>
            <pubDate>Sun, 21 Feb 2021 10:47:39 -0800</pubDate>
            
            <guid>https://00derek.github.io/posts/pi/</guid>
            <description>Tinkering Raspberry Pi Notes Started to play around this little thing and I used to set it up to run a Minecraft server for my son. But now he is moving on to public servers (inevitably) that I am going to take it for experimenting things myself.
OS For some reason that my pi no longer able to connect to my wifi, after few tries, I decided to reinstall everything.</description>
            <content type="html"><![CDATA[<h2 id="tinkering-raspberry-pi-notes">Tinkering Raspberry Pi Notes</h2>
<p>Started to play around this little thing and I used to set it up to run a Minecraft server for my son.  But now he is moving on to public servers (inevitably) that I am going to take it for experimenting things myself.</p>
<h2 id="os">OS</h2>
<p>For some reason that my pi no longer able to connect to my wifi, after few tries, I decided to reinstall everything.</p>
<ul>
<li><a href="https://www.balena.io/etcher/">Etcher</a> to re-image</li>
<li>with official image <a href="https://www.raspberrypi.org/documentation/installation/installing-images/">download</a></li>
<li>install zsh</li>
</ul>
<pre><code>sudo apt-get install zsh
</code></pre><ul>
<li>set zsh as the default</li>
</ul>
<pre><code>chsh -s /bin/zsh
</code></pre><ul>
<li>install ohmyzsh</li>
</ul>
<pre><code>sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;
</code></pre><ul>
<li><a href="https://github.com/romkatv/powerlevel10k">zsh theme</a></li>
</ul>
<h2 id="python-3-installation">Python 3 installation</h2>
<ul>
<li>update packages and install needed dependencies</li>
</ul>
<pre><code>&gt; sudo apt-get update
&gt; sudo apt-get screen
&gt; sudo apt-get install -y build-essential tk-dev libncurses5-dev libncursesw5-dev libreadline6-dev libdb5.3-dev libgdbm-dev libsqlite3-dev libssl-dev libbz2-dev libexpat1-dev liblzma-dev zlib1g-dev libffi-dev
</code></pre><ul>
<li>download python 3.9.2 and install</li>
</ul>
<pre><code>&gt; screen -S py3
&gt; wget https://www.python.org/ftp/python/3.9.2/Python-3.9.2.tgz
&gt; tar zxvf Python-3.9.2.tgz
&gt; cd Python-3.9.2/
&gt; ./configure --prefix=/usr/local/opt/python-3.9.2 --enable-optimizations
&gt; make -j4
&gt; sudo make altinstall
</code></pre><ul>
<li>set it to the default</li>
</ul>
<pre><code>&gt; sudo update-alternatives --list python
&gt; sudo update-alternatives --install /usr/bin/python python /usr/local/opt/python-3.9.2/bin/python3.9 1
</code></pre><h2 id="to-be-continued">To Be Continued</h2>
]]></content>
        </item>
        
        <item>
            <title>Questions I should review myself</title>
            <link>https://00derek.github.io/posts/questions_collection/</link>
            <pubDate>Tue, 17 Nov 2020 12:00:16 -0800</pubDate>
            
            <guid>https://00derek.github.io/posts/questions_collection/</guid>
            <description>Various questions and quotes that I collected and for myself to introspect and review later.
Constantly updating. It&amp;rsquo;s NOT original &amp;ndash; credits to all the original authors, even I don&amp;rsquo;t quote you here (being too lazy).
Examine your true north  I want to ______[What] so that I can _______ [why] by _______[how] What are you optimizing for? and why?  Is this essential? Am I progressing? Why am I taking this so seriously?</description>
            <content type="html"><![CDATA[<p>Various questions and quotes that I collected and for myself to introspect and review later.</p>
<p><strong>Constantly updating.</strong>
It&rsquo;s NOT original &ndash; credits to all the original authors, even I don&rsquo;t quote you here (being too lazy).</p>
<h2 id="examine-your-true-north">Examine your true north</h2>
<ul>
<li>I want to ______[What] so that I can _______ [why] by _______[how]</li>
<li>What are you optimizing for? and why?
<ul>
<li>Is this essential?</li>
<li>Am I progressing?</li>
<li>Why am I taking this so seriously?</li>
<li>Am I making a positive contribution?</li>
<li>What would less look like?</li>
</ul>
</li>
</ul>
<h2 id="on-setting-goals">On setting goals</h2>
<ul>
<li>What about this goal sparked my curiosity?</li>
<li>What motivated me to want to invest my time and energy here?</li>
<li>What I am trying to accomplish?</li>
<li>What will it require?</li>
<li>What is my definition of success with this goal?</li>
</ul>
<h2 id="on-child-development">On child development</h2>
<ul>
<li>Has my child developed the skill to develop better skills?</li>
<li>The knowledge to develop deeper knowledge?</li>
<li>The experience to learn from his experiences?</li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Create blog with GH pages/Hugo</title>
            <link>https://00derek.github.io/posts/hugo_site/</link>
            <pubDate>Wed, 11 Nov 2020 20:35:52 -0800</pubDate>
            
            <guid>https://00derek.github.io/posts/hugo_site/</guid>
            <description>Github setup I have a corporate account and wanted to use my personal account for hosting my blog. So essentially it could be using 2 different SSH key and auth with separate keys &amp;ndash; since I have my company auth with OSXKeychain, I just did it for my personal one, and it will be the same for another account if I need it
  Create SSH keys
$ cd ~/.</description>
            <content type="html"><![CDATA[<h2 id="github-setup">Github setup</h2>
<p>I have a corporate account and wanted to use my personal account for hosting my blog.  So essentially it could be using 2 different SSH key and auth with separate keys &ndash; since I have my company auth with OSXKeychain, I just did it for my personal one, and it will be the same for another account if I need it</p>
<ul>
<li>
<p>Create SSH keys</p>
<pre><code>$ cd ~/.ssh
$ ssh-keygen -t rsa -b 4096 -C &quot;your_personal_email@domain.com&quot;
# getting 2 files
# id_rsa_personal
# id_rsa_personal.pub
</code></pre></li>
<li>
<p>Add SSH key to Github account</p>
<pre><code>$ pbcopy &lt; ~/.ssh/id_rsa_personal.pub
# On github
&gt; Settings -&gt; SSH and GPG keys -&gt; New SSH key -&gt; then paste the personal key
</code></pre></li>
<li>
<p>edit <code>.ssh/config</code></p>
<pre><code># Personal account - default config
Host github.com-personal
  HostName github.com
  User git
  IdentityFile ~/.ssh/id_rsa_personal
</code></pre></li>
<li>
<p>add SSH keys</p>
<pre><code># ssh-add -- adds private key identities to the authentication agent

# remove prev. saved identities if needed
$ cd ~
$ ssh-add -D

# add
$ ssh-add id_rsa_personal

# list
$ ssh-add -l
</code></pre></li>
<li>
<p>talk to Github with ssh</p>
<pre><code>git clone git@github.com:00derek/blog.git
</code></pre></li>
<li>
<p>config git config for my personal repo (under the directory)
I kept the global settings for the work, and overwrite local config with my personal ones</p>
<pre><code>git config user.name &quot;Derek Chang&quot;
git config user.email &quot;derekchang@live.com&quot;
</code></pre></li>
</ul>
<h2 id="hugo-and-themes">Hugo and themes</h2>
<p>Basically follow the <a href="https://gohugo.io/getting-started/quick-start/">Hugo quickstart</a></p>
<ul>
<li>
<p>Install Hugo<br>
<code>brew install hugo</code></p>
</li>
<li>
<p>Create a New Site<br>
<code>hugo new site SITE_NAME</code></p>
</li>
<li>
<p>Add a Theme &ndash; there are plenty of <a href="https://themes.gohugo.io">themes</a> to choose from</p>
<pre><code>cd SITE_NAME
git init
git submodule add https://github.com/rhazdon/hugo-theme-hello-friend-ng.git themes/hello-friend-ng
</code></pre></li>
<li>
<p>add posts</p>
<pre><code>hugo new posts/SOME_POST.md
hugo new about.md
</code></pre></li>
<li>
<p>run locally with drafts enabled
<code>hugo server -D</code>, now the site is available at <a href="localhost:1313">localhost:1313</a></p>
</li>
<li>
<p>customize the theme<br>
change <code>config.toml</code> &ndash; full details of <a href="https://github.com/00derek/blog/blob/master/config.toml">my config</a></p>
<pre><code>baseurl      = &quot;https://00derek.github.io&quot;
title        = &quot;My Blog&quot;
languageCode = &quot;en-us&quot;
theme        = &quot;hello-friend-ng&quot;
paginate     = 10
</code></pre><p><a href="https://gohugo.io/hugo-modules/theme-components/">Detailed How-to</a></p>
</li>
<li>
<p>Build
<code>hugo -D</code> or <code>hugo -t hello-friend-ng</code></p>
</li>
<li>
<p>Adding utterance for commenting
It&rsquo;s a lightweight comments widget built on GitHub issues. Use GitHub issues for blog comments.
<a href="https://utteranc.es">https://utteranc.es</a></p>
<ul>
<li>Just need to install at <a href="https://github.com/apps/utterances">https://github.com/apps/utterances</a></li>
<li>Select the <code>USERNAME</code> repo for access</li>
<li>Copy the script (based on the configuration) to the template of the theme, e.g.
<code>layouts/partials/footer.html</code> or <code>layouts/posts/single.html</code>
There is probably not a right/better way to do it &ndash; <a href="https://gohugobrasil.netlify.app/themes/customizing/">https://gohugobrasil.netlify.app/themes/customizing/</a>
<pre><code>&lt;script src=&quot;https://utteranc.es/client.js&quot;
        repo=&quot;[ENTER REPO HERE]&quot;
        issue-term=&quot;pathname&quot;
        theme=&quot;github-dark&quot;
        crossorigin=&quot;anonymous&quot;
        async&gt;
&lt;/script&gt;
</code></pre></li>
</ul>
</li>
</ul>
<h2 id="deploy-hugo-as-a-github-pages-project">Deploy Hugo as a GitHub Pages project</h2>
<p><a href="https://gohugo.io/hosting-and-deployment/hosting-on-github/">https://gohugo.io/hosting-and-deployment/hosting-on-github/</a></p>
<h3 id="step-by-step">Step-by-step</h3>
<p><a href="https://gohugo.io/hosting-and-deployment/hosting-on-github/#step-by-step-instructions">Hugo host on Github Step-by-Step</a> is pretty awesome.  Shamelessly copy/paste here.  Just note that <code>YOUR-PROJECT</code> repo is different from <code>USERNAME</code> repo that going to host github pages are different repos.  I misread that and was wondering why the instructions not working.</p>
<ul>
<li>Create a <code>&lt;YOUR-PROJECT&gt;</code> (e.g. blog) repository on GitHub. This repository will contain Hugo’s content and other source files.</li>
<li>Create a <code>&lt;USERNAME&gt;.github.io</code> GitHub repository. This is the repository that will contain the fully rendered version of your Hugo website.</li>
<li><code>git clone &lt;YOUR-PROJECT-URL&gt; &amp;&amp; cd &lt;YOUR-PROJECT&gt;</code></li>
<li>Paste your existing Hugo project into the new local <!-- raw HTML omitted --> repository. Make sure your website works locally (hugo server or hugo server -t <!-- raw HTML omitted -->) and open your browser to <a href="http://localhost:1313">http://localhost:1313</a>.
<ul>
<li>Once you are happy with the results:</li>
<li>Press Ctrl+C to kill the server</li>
</ul>
</li>
<li>Before proceeding run rm -rf public to completely remove the <code>public</code> directory</li>
<li><code>git submodule add -b master https://github.com/&lt;USERNAME&gt;/&lt;USERNAME&gt;.github.io.git public</code>. This creates a git submodule. Now when you run the hugo command to build your site to public, the created <code>public</code> directory will have a different remote origin (i.e. hosted GitHub repository).</li>
<li>Make sure the baseURL in your config file is updated with: <!-- raw HTML omitted -->.github.io</li>
</ul>
<h3 id="create-a-deployment-script">create a deployment script</h3>
<p>Same, copy the instructions from <a href="https://gohugo.io/hosting-and-deployment/hosting-on-github/#put-it-into-a-script">Hugo documentation</a></p>
<ul>
<li>adding a deploy.sh
<pre><code>#!/bin/sh

# If a command fails then the deploy stops
set -e

printf &quot;\033[0;32mDeploying updates to GitHub...\033[0m\n&quot;

# Build the project.
hugo # if using a theme, replace with `hugo -t &lt;YOURTHEME&gt;`

# Go To Public folder
cd public

# Add changes to git.
git add .

# Commit changes.
msg=&quot;rebuilding site $(date)&quot;
if [ -n &quot;$*&quot; ]; then
  msg=&quot;$*&quot;
fi
git commit -m &quot;$msg&quot;

# Push source and build repos.
git push origin master
</code></pre></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>My Python Dev Env setup</title>
            <link>https://00derek.github.io/posts/dev-env-setup/</link>
            <pubDate>Mon, 09 Nov 2020 11:35:41 -0700</pubDate>
            
            <guid>https://00derek.github.io/posts/dev-env-setup/</guid>
            <description>Making a note to jot down the tools I preferred to use when setting up Python development environment &amp;ndash; there should be one&amp;ndash; and preferably only one &amp;ndash;obvious way to do things
Terminal/REPL/IDE  zsh/oh-my-zsh https://ohmyz.sh/  plugins=(git history-substring-search zsh-autosuggestions) theme: power10k Cheatsheet   iTerm2 iPython/bpython VsCode  Python environment management   Managing virtualenv — virtualenv/virtualenvwrapper or venv manages virtual environments for a specific Python version.
  Managing multiple Python versions With pyenv</description>
            <content type="html"><![CDATA[<p>Making a note to jot down the tools I preferred to use when setting up Python development environment &ndash; <strong>there should be one&ndash; and preferably only one &ndash;obvious way to do things</strong></p>
<h2 id="terminalreplide">Terminal/REPL/IDE</h2>
<ul>
<li>zsh/oh-my-zsh <a href="https://ohmyz.sh/">https://ohmyz.sh/</a>
<ul>
<li>plugins=(git history-substring-search zsh-autosuggestions)</li>
<li>theme: <a href="https://github.com/romkatv/powerlevel10k">power10k</a></li>
<li><a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Cheatsheet">Cheatsheet</a></li>
</ul>
</li>
<li>iTerm2</li>
<li>iPython/bpython</li>
<li>VsCode</li>
</ul>
<h2 id="python-environment-management">Python environment management</h2>
<ul>
<li>
<p>Managing virtualenv — virtualenv/virtualenvwrapper or venv manages virtual environments for a specific Python version.</p>
</li>
<li>
<p>Managing multiple Python versions With pyenv</p>
<ul>
<li>
<p>Installation</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">curl https://pyenv.run | bash
or brew install pyenv

export PATH<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$HOME<span style="color:#e6db74">/.pyenv/bin:</span>$PATH<span style="color:#e6db74">&#34;</span>
eval <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>pyenv init -<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
eval <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>pyenv virtualenv-init -<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
</code></pre></div></li>
</ul>
<ol>
<li>
<p>Install multiple versions of Python</p>
</li>
<li>
<p>Install the latest development version of Python</p>
</li>
<li>
<p>Switch between the installed versions</p>
</li>
<li>
<p>Use virtual environments with <code>pyenv</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">pyenv virtualenv &lt;python_version&gt; &lt;environment_name&gt;
</code></pre></div></li>
<li>
<p>Activate different Python versions and virtual environments automatically</p>
</li>
<li>
<p>some useful plugins</p>
<ul>
<li><code>pyenv-which-ext</code>: Plugin to automatically lookup system commands</li>
<li><code>pyenv-virtualenv</code>: Plugin for pyenv and virtual environments</li>
<li><code>pyenv-update</code>: Plugin for updating pyenv</li>
</ul>
</li>
</ol>
</li>
</ul>
<h2 id="dependency-management-tools">Dependency management tools</h2>
<ul>
<li>Preferred: <a href="https://python-poetry.org/">Poetry</a>
<ul>
<li>pyproject.toml and poetry.lock</li>
</ul>
</li>
<li>pip install -r requirements.txt</li>
<li><a href="https://pipenv.pypa.io/en/latest/">Pipenv</a>
<ul>
<li>Pipfile and Pipfile.lock</li>
</ul>
</li>
</ul>
<h2 id="linting-tools">Linting tools</h2>
<ul>
<li>Codes are read much longer time than being written</li>
<li><a href="https://pre-commit.com/">pre-commit</a></li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-jsx" data-lang="jsx"><span style="color:#a6e22e">repos</span><span style="color:#f92672">:</span>
<span style="color:#f92672">-</span>   <span style="color:#a6e22e">repo</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">https</span><span style="color:#f92672">:</span><span style="color:#75715e">//github.com/pre-commit/pre-commit-hooks
</span><span style="color:#75715e"></span>    <span style="color:#a6e22e">rev</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">v3</span><span style="color:#ae81ff">.4.0</span>
    <span style="color:#a6e22e">hooks</span><span style="color:#f92672">:</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">check</span><span style="color:#f92672">-</span><span style="color:#a6e22e">yaml</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">check</span><span style="color:#f92672">-</span><span style="color:#66d9ef">byte</span><span style="color:#f92672">-</span><span style="color:#a6e22e">order</span><span style="color:#f92672">-</span><span style="color:#a6e22e">marker</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">end</span><span style="color:#f92672">-</span><span style="color:#66d9ef">of</span><span style="color:#f92672">-</span><span style="color:#a6e22e">file</span><span style="color:#f92672">-</span><span style="color:#a6e22e">fixer</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">trailing</span><span style="color:#f92672">-</span><span style="color:#a6e22e">whitespace</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">check</span><span style="color:#f92672">-</span><span style="color:#a6e22e">merge</span><span style="color:#f92672">-</span><span style="color:#a6e22e">conflict</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">debug</span><span style="color:#f92672">-</span><span style="color:#a6e22e">statements</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">name</span><span style="color:#f92672">-</span><span style="color:#a6e22e">tests</span><span style="color:#f92672">-</span><span style="color:#a6e22e">test</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">check</span><span style="color:#f92672">-</span><span style="color:#a6e22e">builtin</span><span style="color:#f92672">-</span><span style="color:#a6e22e">literals</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">no</span><span style="color:#f92672">-</span><span style="color:#a6e22e">commit</span><span style="color:#f92672">-</span><span style="color:#a6e22e">to</span><span style="color:#f92672">-</span><span style="color:#a6e22e">branch</span>
      <span style="color:#a6e22e">args</span><span style="color:#f92672">:</span> [<span style="color:#f92672">--</span><span style="color:#a6e22e">branch</span>, <span style="color:#a6e22e">staging</span>, <span style="color:#f92672">--</span><span style="color:#a6e22e">branch</span>, <span style="color:#a6e22e">master</span>]
<span style="color:#f92672">-</span>   <span style="color:#a6e22e">repo</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">https</span><span style="color:#f92672">:</span><span style="color:#75715e">//github.com/pycqa/isort
</span><span style="color:#75715e"></span>    <span style="color:#a6e22e">rev</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">5.8.0</span>
    <span style="color:#a6e22e">hooks</span><span style="color:#f92672">:</span>
      <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">isort</span>
        <span style="color:#a6e22e">args</span><span style="color:#f92672">:</span> [<span style="color:#e6db74">&#34;--profile&#34;</span>, <span style="color:#e6db74">&#34;black&#34;</span>]
<span style="color:#f92672">-</span>   <span style="color:#a6e22e">repo</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">https</span><span style="color:#f92672">:</span><span style="color:#75715e">//github.com/psf/black
</span><span style="color:#75715e"></span>    <span style="color:#a6e22e">rev</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">20.8</span><span style="color:#a6e22e">b1</span>
    <span style="color:#a6e22e">hooks</span><span style="color:#f92672">:</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">black</span>
<span style="color:#f92672">-</span>   <span style="color:#a6e22e">repo</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">https</span><span style="color:#f92672">:</span><span style="color:#75715e">//gitlab.com/pycqa/flake8
</span><span style="color:#75715e"></span>    <span style="color:#a6e22e">rev</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">3.9.0</span>
    <span style="color:#a6e22e">hooks</span><span style="color:#f92672">:</span>
    <span style="color:#f92672">-</span> <span style="color:#a6e22e">id</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">flake8</span>
</code></pre></div><h2 id="other-interesting-tools">Other interesting tools</h2>
<h3 id="icdiff-and-pytest-icdiff">icdiff and pytest-icdiff</h3>
<ul>
<li>icdiff: “Improved colored diff”
<pre><code>pip install git+https://github.com/jeffkaufman/icdiff.git
git icdiff
git config --global icdiff.options '--highlight --line-numbers'
</code></pre></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Prologue</title>
            <link>https://00derek.github.io/posts/prologue/</link>
            <pubDate>Mon, 09 Nov 2020 08:47:25 -0800</pubDate>
            
            <guid>https://00derek.github.io/posts/prologue/</guid>
            <description>Why Now my notes are all collected through Notion, I highly recommend it. But I think it may be also good to publish my notes somewhere 1. just in case 2. someone may find it helpful 3. Because I want to?
Who Anyone? Leave me your comments.
What I guess it will be mainly technical notes for now, I haven&amp;rsquo;t given a lot of thoughts of what to journal yet. So yeah, it&amp;rsquo;s random stuff.</description>
            <content type="html"><![CDATA[<h2 id="why">Why</h2>
<p>Now my notes are all collected through <a href="http://notion.so/">Notion</a>, I highly recommend it.  But I think it may be also good to publish my notes somewhere 1. just in case 2. someone may find it helpful 3. Because I want to?</p>
<h2 id="who">Who</h2>
<p>Anyone? Leave me your comments.</p>
<h2 id="what">What</h2>
<p>I guess it will be mainly technical notes for now, I haven&rsquo;t given a lot of thoughts of what to journal yet.  So yeah, it&rsquo;s random stuff.</p>
<h2 id="where">Where</h2>
<p>It&rsquo;s hosted on <a href="https://00derek.github.io">Github</a>, <a href="https://github.com/00derek/blog">source</a> too.</p>
<h2 id="how">How</h2>
<p>It&rsquo;s powered by <a href="https://gohugo.io">Hugo</a>, a note about the <a href="../hugo_site/">setup</a></p>
]]></content>
        </item>
        
    </channel>
</rss>
